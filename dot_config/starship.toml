#############################
# Enhanced Starship Prompt  #
#############################

# ---- Global ---------------------------------------------------------------
add_newline = true                 # multi-line prompt for readability
command_timeout = 1200
scan_timeout = 30
palette = "night"                  # custom palette defined below

# Two-line prompt with balanced left/right content using $fill
# Line 1: header symbol, context (os/user/host if ssh), path, git, runtimes, container, package, right-aligned duration & time
# Line 2: status (if error) + prompt character
format = """
[╭](subtle) $os$username$hostname$directory$git_branch$git_status$git_commit $nodejs$python$golang$rust$docker_context$kubernetes $package$fill$memory_usage$battery $cmd_duration $time
[╰](subtle) $status$character
"""

# right prompt (unused now; we inline timing on first line). Keep for easy revert.
right_format = """$cmd_duration $time"""

# ---- Visual theme (custom palette) ---------------------------------------
[palettes.night]
fg = "#c0caf5"
dim = "#a9b1d6"
subtle = "#565f89"
accent = "#7aa2f7"
success = "#9ece6a"
warn = "#e0af68"
err = "#f7768e"
purple = "#bb9af7"
cyan = "#7dcfff"
bg1 = "#1a1b26"          # optional background shades (not directly used but available)
bg2 = "#24283b"

# ---- Prompt symbol --------------------------------------------------------
[character]
success_symbol = "[➜](bold success) "
error_symbol = "[✗](bold err) "
vicmd_symbol = "[](bold warn) "
format = "$symbol"
disabled = false

# ---- Directory ------------------------------------------------------------
[directory]
style = "bold accent"
truncate_to_repo = true
truncation_length = 3
truncation_symbol = "…/"
read_only = " "
read_only_style = "warn"
home_symbol = "~"
format = "[$path]($style)[$read_only]($read_only_style) "
# Optional pretty substitutions for common dirs (add more if desired)
substitutions = { "Documents" = "", "Downloads" = "", "Pictures" = "", "Music" = "", "Projects" = "", "git" = "" }

# ---- Context (OS / user / host / shell) ----------------------------------
[os]
disabled = false
style = "bold subtle"
format = "[$symbol]($style) "

[username]
show_always = false              # show only when different from login TTY context or root
style_user = "bold fg"
style_root = "bold err"
format = "[$user]($style) "
disabled = false

[hostname]
ssh_only = true
ssh_symbol = " "
format = "@$ssh_symbol[$hostname](bold accent) "
disabled = false

[shell]
disabled = false
format = "[$indicator]($style) "
style = "dim"
bash_indicator = "bash"
zsh_indicator = "zsh"
fish_indicator = "fish"
unknown_indicator = "sh"

# ---- Git branch & status --------------------------------------------------
[git_branch]
symbol = " "
style = "bold purple"
format = "on [$symbol$branch]($style) "

[git_status]
style = "bold warn"
conflicted = "⚔ "
ahead = "⇡${count} "
behind = "⇣${count} "
diverged = "⇕${ahead_count}/${behind_count} "
stashed = "🧺${count} "
modified = "✎${count} "
staged = "●${count} "
renamed = "»${count} "
deleted = "✖${count} "
untracked = "…${count} "
format = '([\[$all_status$ahead_behind\]]($style) )'

[git_commit]
commit_hash_length = 7
tag_disabled = false
style = "dim"
tag_symbol = " "
format = "[$tag$hash]($style) "

# ---- Languages / runtimes -------------------------------------------------
[nodejs]
symbol = " "
format = "via [$symbol$version]($style) "
detect_files = ["package.json", "pnpm-lock.yaml", "yarn.lock", "bun.lockb"]

[python]
symbol = " "
pyenv_version_name = true
detect_files = ["pyproject.toml", "requirements.txt", "Pipfile", "poetry.lock"]
format = 'via [$symbol$version]($style)[$virtualenv](dim) '

[golang]
symbol = " "
format = "via [$symbol$version]($style) "

[rust]
symbol = " "
format = "via [$symbol$version]($style) "

[package]
symbol = "📦 "
display_private = true
format = "[$symbol$version]($style) "

# ---- Containers / cloud ---------------------------------------------------
[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
only_with_files = false

[kubernetes]
symbol = "⎈ "
format = "on [$symbol$context( @ $namespace)]($style) "
disabled = true  # flip to false if you actually use k8s

# ---- System / resources ---------------------------------------------------
[memory_usage]
disabled = false
symbol = " "
threshold = -1                  # always show
format = "[$symbol${ram}( ${swap})]($style) "
style = "cyan"

[battery]
disabled = false
full_symbol = " "
charging_symbol = " "
discharging_symbol = " "
unknown_symbol = " "
empty_symbol = " "
format = "[$symbol$percentage]($style) "

[[battery.display]]
threshold = 30
style = "bold warn"

[[battery.display]]
threshold = 10
style = "bold err"

# ---- Timing / status ------------------------------------------------------
[cmd_duration]
min_time = 500
format = "took [$duration]($style)"
style = "bold cyan"

[time]
disabled = false
time_format = "%H:%M"
style = "dim"
format = "[$time]($style)"

[status]
style = "bold err"
symbol = "✗ "
format = "[$symbol$status]($style) "
map_symbol = true
disabled = false
recognize_signal_code = true
pipestatus = false
